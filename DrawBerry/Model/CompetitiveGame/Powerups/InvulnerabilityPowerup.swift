//
//  InvulnerabilityPowerup.swift
//  DrawBerry
//
//  Created by Jon Chua on 26/3/20.
//  Copyright Â© 2020 DrawBerry. All rights reserved.
//

import UIKit

class InvulnerabilityPowerup: TogglePowerup {
    var image = PowerupAssets.invulnerabilityPowerupUIImage

    var owner: CompetitivePlayer
    var targets: [CompetitivePlayer]

    var description = Message.invulnerabilityPowerup

    var location: CGPoint
    var duration = 5.0

    var addedDecorators = [CompetitiveCanvas]()

    required init(owner: CompetitivePlayer, players: [CompetitivePlayer], location: CGPoint) {
        self.owner = owner
        self.targets = [owner]
        self.location = location
    }

    /// The invulnerability powerup decorates the target player's canvas with
    /// an Invulnerable canvas, nullifying certain powerup effects.
    func activate() {
        targets.forEach {
            guard let decoratedCanvas = InvulnerableBerryCanvas.decoratedCanvasFrom(canvas: $0.canvasDrawing) else {
                return
            }
            addedDecorators.append(decoratedCanvas)
            $0.canvasDrawing = decoratedCanvas
        }

        _ = Timer.scheduledTimer(withTimeInterval: TimeInterval(duration), repeats: false) { timer in
            self.deactivate()
            timer.invalidate()
        }
    }

    /// Remove the decorator from the player's canvas
    func deactivate() {
        for target in targets {
            addedDecorators.forEach { target.removeDecorator(decoratorToRemove: $0) }
        }
    }
}
